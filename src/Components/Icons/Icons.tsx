import { forwardRef } from 'react'
import SvgIcon from '@mui/material/SvgIcon'
type FontAwesomeSvgIconProps = {
	icon: any
}

type CustomIconProps = {
	fontsize?: 'small' | 'medium' | 'large' | 'inherit'
}

export const FontAwesomeSVGIcon = forwardRef<
	SVGSVGElement,
	FontAwesomeSvgIconProps
>((props, ref) => {
	const { icon } = props

	const {
		icon: [width, height, , , svgPathData],
	} = icon

	return (
		<SvgIcon
			ref={ref}
			viewBox={`0 0 ${width} ${height}`}
		>
			{typeof svgPathData === 'string' ? (
				<path d={svgPathData} />
			) : (
				svgPathData.map((d: string, i: number) => (
					<path
						style={{ opacity: i === 0 ? 0.4 : 1 }}
						d={d}
						key={i}
					/>
				))
			)}
		</SvgIcon>
	)
})

export const Pico = (props: CustomIconProps) => {
	const { fontsize } = props
	const size = () => {
		switch (fontsize) {
			case 'inherit':
				return fontsize
			case 'large':
				return '2.1875rem'
			case 'medium':
				return '1.5rem'
			case 'small':
				return '1.25rem'
			default:
				return '1.5rem'
		}
	}

	return (
		<svg
			width='1em'
			height='1em'
			viewBox='0 0 277 277'
			fontSize={size()}
			xmlns='http://www.w3.org/2000/svg'
		>
			<path
				fill='currentColor'
				d='M144.43 0.92012C117.167 -0.339797 90.143 6.51232 66.7743 20.6101C43.4056 34.7079 24.7417 55.4183 13.1426 80.1227C1.54354 104.827 -2.46994 132.416 1.60964 159.401C5.68923 186.386 17.6787 211.556 36.062 231.728C54.4454 251.899 78.3972 266.167 104.889 272.727C131.381 279.287 159.223 277.845 184.895 268.582C210.567 259.32 232.916 242.653 249.116 220.69C265.317 198.726 274.641 172.452 275.91 145.19C276.753 127.083 274.02 108.988 267.868 91.9375C261.717 74.887 252.266 59.2156 240.056 45.8182C227.847 32.4209 213.117 21.5602 196.709 13.8565C180.302 6.15273 162.537 1.75692 144.43 0.92012ZM142.8 36.0601C160.047 36.8696 176.814 42.0066 191.555 50.9979C206.295 59.9891 218.536 72.5455 227.15 87.5101C235.763 102.475 240.472 119.366 240.842 136.629C241.213 153.891 237.233 170.97 229.27 186.29C206.948 157.94 185.231 128.979 162.25 101.16C152.649 89.4933 140.602 80.0784 126.961 73.5811C113.321 67.0838 98.4188 63.6628 83.3099 63.5601H82.4899C77.1831 63.5601 71.8842 63.968 66.6399 64.7801C76.7036 55.0503 88.652 47.483 101.75 42.5438C114.847 37.6046 128.817 35.3981 142.8 36.0601ZM133.26 241.52C117.315 240.769 101.764 236.319 87.8356 228.522C73.9072 220.726 61.9833 209.796 53.0068 196.597C44.0302 183.398 38.2471 168.292 36.1147 152.472C33.9822 136.653 35.5588 120.555 40.7199 105.45L41.2699 105.05C55.8545 94.3421 74.029 89.7195 91.9573 92.1581C109.886 94.5967 126.165 103.906 137.36 118.12L185.19 178.84L210.84 211.42C200.73 221.58 188.602 229.507 175.24 234.692C161.877 239.876 147.577 242.202 133.26 241.52Z'
			/>
		</svg>
	)
}

export const Viveport = (props: CustomIconProps) => {
	const { fontsize } = props
	const size = () => {
		switch (fontsize) {
			case 'inherit':
				return fontsize
			case 'large':
				return '2.1875rem'
			case 'medium':
				return '1.5rem'
			case 'small':
				return '1.25rem'
			default:
				return '1.5rem'
		}
	}
	const viewport = 250
	return (
		<svg
			width='1em'
			height='1em'
			viewBox={`0 0 ${viewport} ${viewport}`}
			fontSize={size()}
			xmlns='http://www.w3.org/2000/svg'
		>
			<g>
				<path
					fill='currentColor'
					d='M246.76,152.88L246.76,152.88c-8.26-39.54-28.37-74.97-58.15-102.45c-18.46-17.03-46.29-17.03-64.74,0.01   c-29.78,27.5-49.88,62.93-58.13,102.46c-5,23.93,4.24,66.11,92.5,66.11S251.76,176.8,246.76,152.88z M214.4,197.58   c-13.82,5.46-31.27,9.49-54.95,9.75c-24.06,0.26-39.21-1.65-57.03-7.29c-20.86-6.6-33.67-22.88-28.57-46.44   c7.94-36.7,45.36-103,82.53-103s76.09,65.03,84.26,104.13C245.11,176.22,232.92,190.26,214.4,197.58z'
				/>
			</g>
			<path
				fill='currentColor'
				d='M110.2,169.17c-18.91-28.11-5.44-64.67-3.13-75.97c-16.35,26.24-33.75,68.34-22.49,84.63  c19.36,28.03,97.97,22.49,97.97,22.49S129.11,197.28,110.2,169.17z'
			/>
			<path
				fill='currentColor'
				d='M192.52,92.74c-6.26-10.66-18.77-14.93-27.94-9.54c-9.18,5.39-11.54,18.39-5.28,29.05  c6.26,10.66,18.77,14.93,27.94,9.54C196.41,116.4,198.78,103.39,192.52,92.74z M181.92,117.44c-6.41,3.77-15.11,0.86-19.43-6.49  c-4.31-7.35-2.61-16.36,3.8-20.12c6.41-3.77,15.11-0.86,19.43,6.49C190.04,104.66,188.34,113.67,181.92,117.44z'
			/>
		</svg>
	)
}

export const Kofi = (props: CustomIconProps) => {
	const { fontsize } = props
	const size = () => {
		switch (fontsize) {
			case 'inherit':
				return fontsize
			case 'large':
				return '2.1875rem'
			case 'medium':
				return '1.5rem'
			case 'small':
				return '1.25rem'
			default:
				return '1.5rem'
		}
	}

	return (
		<svg
			xmlns='http://www.w3.org/2000/svg'
			width='1em'
			height='1em'
			viewBox='0 0 24 24'
			fontSize={size()}
		>
			<path
				fill='currentColor'
				d='M23.881 8.948c-.773-4.085-4.859-4.593-4.859-4.593H.723c-.604 0-.679.798-.679.798s-.082 7.324-.022 11.822c.164 2.424 2.586 2.672 2.586 2.672s8.267-.023 11.966-.049c2.438-.426 2.683-2.566 2.658-3.734c4.352.24 7.422-2.831 6.649-6.916zm-11.062 3.511c-1.246 1.453-4.011 3.976-4.011 3.976s-.121.119-.31.023c-.076-.057-.108-.09-.108-.09c-.443-.441-3.368-3.049-4.034-3.954c-.709-.965-1.041-2.7-.091-3.71c.951-1.01 3.005-1.086 4.363.407c0 0 1.565-1.782 3.468-.963c1.904.82 1.832 3.011.723 4.311zm6.173.478c-.928.116-1.682.028-1.682.028V7.284h1.77s1.971.551 1.971 2.638c0 1.913-.985 2.667-2.059 3.015z'
			/>
		</svg>
	)
}
